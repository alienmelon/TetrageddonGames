package tetrigeddon.enemies {	// Bird.as	/*	 * A bird.	 */		import tetrigeddon.Enemy;	import tetrigeddon.display.Debris;	import flash.display.*;	import flash.utils.*;	public class Bird extends Enemy	{				public function Bird(__mainTimeline:MovieClip)		{						super();			this._mainTimeline = __mainTimeline;			this.states.crash = -2;			this.states.fly = 1;			this.dir = 1;			this.x = Game.randomNumber(this.x, -10);			if (Game.randomNumber(0, 5) == 5)			{				this.dir = -1;				this.x = Game.randomNumber(20, 23);			}			this._score = 100;			//attach a bird			var bird:Class = getDefinitionByName("bird" + Game.randomNumber(1, 4)) as Class;			this.movieClip = new bird();			this._mainTimeline.addChild(this.movieClip);			this.movieClip.name = "bird_" + id;			this.movieClip.cacheAsBitmap = true;			this.movieClip.enabled = false;  			this.movieClip.buttonMode = false;  			this.movieClip.mouseChildren = false;			this.movieClip.stop();			//			this._mainTimeline.ARR_ENEMIES.push(this.movieClip);			//			this.y = Game.randomNumber(5, 10);			//			//trace("Bird.Bird("+this._mainTimeline+");");		}				public function update()		{			//if game state = win			if(_mainTimeline.stopGame){				this._mainTimeline.removeChild(this.movieClip);				Game.enemies.removeEnemy(this);			}			//trace("Bird.update(); called");			// Reached end of screen.			if (this.x < -25 || this.x > 25)			{				/*this._mainTimeline.removeChild(this.movieClip);*/				this._mainTimeline.removeChild(this.movieClip);				//				Game.enemies.removeEnemy(this);				return;			}						if (this.state == this.states.dead) return;						// Bird is dead, so drop to the floor			if (this.state == this.states.crash)			{				var pf:Number = Math.floor(this.groundRow * (_mainTimeline.BLOCK_SIZE + _mainTimeline.BLOCK_SPACING));				this.movieClip.gotoAndStop("falling");				//play random impact sound at random				if(Game.randomNumber(100, 0) > 90){					var snd_bird_tween_1:bird_tween_1 = new bird_tween_1();					var snd_bird_tween_2:bird_tween_2 = new bird_tween_2();					var snd_bird_tween_3:bird_tween_3 = new bird_tween_3();					var snd_bird_tween_4:bird_tween_4 = new bird_tween_4();					var arr_snds:Array = new Array(snd_bird_tween_1, snd_bird_tween_2, snd_bird_tween_3, snd_bird_tween_4);					arr_snds[Math.ceil(Math.random()*arr_snds.length)-1].play();				}				//if (this.pixelY < pf || Game.tileGrid.grid[this.y + 1][this.x] > 0) 				if (this.pixelY < pf)// || Game.tileGrid.grid[this.y + 1][this.x] > 0) 				{					//trace("Bird.update - drop to floor");					this.pixelY += 30.5;					//if(this.pixelY > pf)				}else{//					trace("Bird.update - die with debris");//					this.die();					//trace("Bird.update - die with debris");					this.state = this.states.dead;					//					var d:Debris = new Debris(_mainTimeline);					d.symbol = "gibs";					d.spawn(Game.randomNumber(this.pixelX, this.pixelX + (Math.floor(Math.random() * 5))), this.pixelY, 1, "gibs_bird");					//					if(this.movieClip.currentLabel!="hitground"){						this.movieClip.gotoAndStop("hitground");					};					//					this.die(this.movieClip, this._mainTimeline);				}				return;							}			//trace(this.y);			// Bird is flying.			if (Game.tileGrid.grid[this.y][this.x + this.dir] == 0 || Game.tileGrid.grid[this.y][this.x + this.dir] == undefined)			{				this.state = this.states.fly;				this.movieClip.gotoAndPlay("fly");				this.pixelX += 10 * this.dir;			}			// Flies into block			else if(Game.tileGrid.grid[this.y][this.x + this.dir] > 0)			{				this.state = this.states.crash;				this.movieClip.gotoAndStop("falling");			}		}	}}