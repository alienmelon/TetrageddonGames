package tetrigeddon {	//	import flash.display.*;	import flash.events.*;	import flash.utils.*;	import flash.ui.*;		import tetrigeddon.Enemy;	import tetrigeddon.enemies.*;		/**	* Creates, deletes, and moves enemies.	*/	public class EnemyManager	{		/**		* Array of Enemy instances.		*/		private var enemies:Array;				/*		 * ID of last enemy.		 */		private var UID:Number;				/**		* Number of enemies added.		*/		public var count:Number;				public var max:Number;				public var _mainTimeline:MovieClip;				/**		* Manages all Enemy instances in the game.		*/		public function EnemyManager(__mainTimeline:MovieClip)		{			this._mainTimeline = __mainTimeline;			this.enemies = new Array();			UID = 0;			max = 10;		}				public function addEnemy(id:Number)		{			//trace("EnemyManager.addEnemy("+id+"); called.");			if (this.enemies.length == max)			{				return;			}						var e:Enemy = null;			switch (id)			{				case 1:					//trace("New citizen");					e = new Citizen(_mainTimeline);					break;				case 2:					//trace("New bird");					e = new Bird(_mainTimeline);					break;			}			UID += 1;			e.id = UID;			this.enemies.push(e);		}				public function removeEnemy(e:Enemy)		{			//trace("removeEnemy("+Enemy+");");			var i:Number = -1;			var temp:Array = new Array();			while (++i < this.enemies.length)			{				if (this.enemies[i].id == e.id)				{					this.enemies[i] = null;				}				if (this.enemies[i] != null || this.enemies[i] != undefined)				{					temp.push(this.enemies[i]);				}				}			this.enemies = temp;		}				public function getEnemyAt(x:Number, y:Number):Enemy		{			var i:Number = -1;			while (++i < this.enemies.length)			{				if (enemies[i].x == x && enemies[i].y == y)				{					return enemies[i];				}			}			return undefined;		}				public function update()		{			for (var i in this.enemies)			{				try{					this.enemies[i].update();				}catch(e:Error){					//undefined and has no properties					//this is here until I update all enemes				}			}		}				public function clear()		{			var i:Number = 0;			//			while (++i < this.enemies.length)			{				this.removeEnemy(this.enemies[i]);			}		}	}}